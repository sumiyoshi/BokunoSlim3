var App={domain:"",api:{},Models:[],ViewModels:[],Services:[]};!function(t){t.Models.Model=function(){this.init.apply(this,arguments)},t.Models.Model.prototype={data:[],api:null,status:null,init:function(){this.api=new t.Services.API},fetch:function(t){return this.api.load(this.url,t,this.success.bind(this),this.error.bind(this))},success:function(t){this.status=t.status,this.addData(this.receive(t))},error:function(t){if(_.has(t,"status")&&_.has(t,"statusText")){t.status,t.statusText}},receive:function(t){return t.data},addData:function(t){var i=this;i.data=[],this.status?_.each(t,function(t){i.data.push(t)}):_.each(t.error,function(t){i.data.push(t)})},get:function(){return this.data}}}(window.App),function(t){t.ViewModels.VModel=function(){this.init.apply(this,arguments)},t.ViewModels.VModel.prototype={models:{},promise:{},init:function(){var i=new t.Services.API;this.promise=i.promise,this.setEvents(),this.setModels(),this.initViewModel()},initViewModel:function(){},setModels:function(){},setEvents:function(){}}}(window.App),function(t){t.Services.API=function(){this.init.apply(this,arguments)},t.Services.API.prototype={init:function(){},load:function(i,n,s,e){if(void 0!==i){var o=t.domain+i.url,a=i.method;return $.ajax({type:a,data:n,url:o,success:function(t){void 0!==s&&s(t)}.bind(this),error:e})}},promise:function(t,i){var n=[];_.each(t,function(t){n.push(t)}),$.when.apply($,n).done(function(){var n=[];1==t.length?n.push(arguments[0]):_.each(arguments,function(t){n.push(t)}),i(n)}).fail(function(){console.log("error")})}}}(window.App);