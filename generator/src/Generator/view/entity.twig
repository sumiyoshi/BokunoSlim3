<?php

{% if data.table.category != '' %}
namespace Component\Model\Entity\{{ data.table.category }};
{% else %}
namespace Component\Model\Entity;
{% endif %}

use Core\Util\ArrayUtil;

/**
 * Class {{ data.table.php_name }}
{% if data.table.category != '' %}
 * @package Component\Model\Entity\{{ data.table.category }};
{% else %}
 * @package Component\Model\Entity
{% endif %}
 */
class {{ data.table.php_name }}Entity extends \Model
{

    public static $_table_use_short_name = '{{data.table.name}}';

{% for key in data.primary_key %}
    public static $_id_column = '{{ key }}';
{% endfor %}

{% for items in data.columns %}
	const COL_{{ items.name|upper }} = '{{ items.name }}';
{% endfor %}

{% for items in data.columns %}
	const COL_JP_{{ items.name|upper }} = '{{ items.ja_name }}';
{% endfor %}

	private static $_entities = [
{% for items in data.columns %}
		self::COL_{{items.name|upper}} => null,
{% endfor %}
    ];

    /**
     * @param array $data
     * @return self
     */
    public static function create($data=array())
    {
        $instance = new static();
        $instance->orm = \ORM::for_table(static::$_table_use_short_name)->create($data);

        return $instance;
    }

    /**
     * @return array
     */
    public static function getEntities()
    {
        return self::$_entities;
    }

    /**
     * @param array $keys
     * @return \ORMWrapper
     */
    public static function getORM(array $keys = [])
    {
        $orm = \Model::factory(static::$_table_use_short_name);
        self::addCondition($orm, $keys);

        return $orm;
    }

    /**
     * @param \ORMWrapper $orm
     * @param array $keys
     */
    public static function addCondition(\ORMWrapper $orm, array $keys)
    {
        $tableName = static::$_table_use_short_name;

{% for items in data.columns %}
        #region {{items.ja_name}}
        if (ArrayUtil::hasKey(static::COL_{{ items.name|upper }}, $keys)) {
            $orm->where($tableName.'.'.static::COL_{{ items.name|upper }}, $keys[static::COL_{{ items.name|upper }}]);
        }
        #endregion

{% endfor %}
    }
}